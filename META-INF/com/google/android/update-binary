#!/sbin/sh
# Battery Life Extender
# JayminSuthar @ xda-developers

# Copyright (c) 2018 Jaymin Suthar. All rights reserved.

# This file is a part of "Battery Life Extender (blex)".

# blex is released under the terms of GNU GPL v3 as published
# by the Free Software Foundation, and you hereby are allowed
# to use, modify or redistribute it, either pieces of it or
# entirely under v3 or any later version of the GPL.

# blex is developed in a hope of being useful, but neither
# warranty nor support are promised with it, not even fitness
# for the particular purpose. See the GPLv3 for details.

# A copy of GPLv3 (COPYING) is placed in the root folder of
# blex, see <https://www.gnu.org/licenses/> for more.

out_fd=$2
boot_mode=false
magisk_mode=true
de_data=/data/adb
system=/system

tmp_dir=/dev/blex_tmp
zip_dir=$tmp_dir/zip
bin_dir=$zip_dir/bin
zip_sys=$zip_dir/system
cfg_file=$zip_dir/blex.cfg
prop_file=$zip_dir/module.prop
boot_exec=$zip_dir/post-fs-data.sh
doc_file=$zip_dir/README.md
gpl_file=$zip_dir/COPYING
bb_exec=$bin_dir/busybox

ui_print() {
  if ! $boot_mode; then
    echo -e "ui_print $1\nui_print" >>/proc/self/fd/$out_fd
  else
    echo "$1"
  fi
}

print() {
  case "$1" in
    --error) ui_print "ERROR: $2" ;;
    --info)  ui_print "INFO: $2"  ;;
    *)       ui_print "- $1"      ;;
  esac
}

cleanup() {

  if umount $mount_path; then
    losetup -d $loop_block
  fi
  rm -r $tmp_dir

  if ! $boot_mode; then
    for mountpoint in /data /system /vendor /dev/random; do
      umount -l $mountpoint
    done
  fi
}

abort() {
  print --error "$1"
  cleanup
  exit 1
}

is_mounted() {
  mount | grep -q " $1 "
}

mount_wrap() {
  if ! mount -t auto -o $rw $1; then
    if ! mount -t auto -o $rw,remount $1; then
      abort "Failed to mount $1"
    fi
  fi
}

get_prop() {
  sed -n "s/^$1=//p" $2
}

set_prop() {
  sed -i "s|^$1=.*|$1=$2|" $3
}

migrate_cfg() {
  if test -f $1; then
    print 'Migrating configurations'
    for prop in auto_switch auto_power thr_disable thr_enable thr_power; do
      set_prop $prop $(get_prop $prop $1) $cfg_file
    done
  fi
}

set_perm() {
  chown $2:$3 $1
  chmod $4 $1
  if test -z "$5"; then
    chcon u:object_r:system_file:s0 $1
  else
    chcon $5 $1
  fi
}

set_perm_recursive() {
  find $1 | while read -r entry; do
    if test -d $entry; then
      set_perm $entry $2 $3 $4 $6
    else
      set_perm $entry $2 $3 $5 $6
    fi
  done
}

umask 077
exec 2>/dev/blex_install.log
set -x

if ps | grep -v grep | grep zygote >/dev/null; then
  boot_mode=true
fi

ui_print ' '
ui_print '******************************************'
ui_print '  Battery Life Extender (blex) Installer  '
ui_print '******************************************'
ui_print ' '

print 'Preparing environment'

mkdir -p $zip_dir
unzip "$3" -d $zip_dir >/dev/null

if ! chmod 0755 $bb_exec; then
  abort 'Failed to extract zip'
elif ! $bb_exec --install -s $bin_dir/; then
  abort 'Chipset is not supported'
fi
export PATH=$bin_dir:$PATH

if ! is_mounted /data; then
  if ! mount /data; then
    abort 'Failed to mount /data'
  fi
fi

print 'Checking for Magisk support'
if test "$(get_prop MAGISK_VER_CODE $de_data/magisk/util_functions.sh)" -ge 1468; then
  rw=ro
else
  print --info 'Magisk is not detected, install in system mode'
  magisk_mode=false
  rw=rw
fi

print 'Mounting /system and /vendor'
mount_wrap /system
if test -f /system/init.rc; then
  system=/system/system
fi
if test -L $system/vendor; then
  mount_wrap /vendor
fi

if ! $boot_mode; then
  mount -o bind /dev/urandom /dev/random
  if test -d $system/lib64; then
    export LD_LIBRARY_PATH=$system/lib64:/vendor/lib64
  else
    export LD_LIBRARY_PATH=$system/lib:/vendor/lib
  fi
fi

if $magisk_mode; then
  blex_live=/sbin/.core/img/blex
  img_path=$de_path/magisk.img

  mount_path=$tmp_dir/img
  blex_dir=$mount_path/blex
  sys_dir=$blex_dir/system
  doc_dir=$blex_dir/docs
  bin_dir=$blex_dir/bin

  if $boot_mode; then
    img_path=$de_data/magisk_merge.img
  fi

  if test ! -f $img_path; then
    print 'Creating ext4 image'
    if ! make_ext4fs -l 64M $img_path >/dev/null; then
      $system/bin/mke2fs -t ext4 $img_path 64M >/dev/null
    fi
  fi

  print 'Mounting ext4 image'

  mkdir $mount_path
  for minor in 0 1 2 3 4 5 6 7; do
    loop_block=/dev/block/loop$minor

    if test ! -b $loop_block; then
      mknod $loop_block b 7 $minor
    fi
    if losetup $loop_block $img_path >/dev/null; then
      if mount -t ext4 -o loop $loop_block $mount_path; then
        break
      fi
    fi
  done
  if ! is_mounted $mount_path; then
    abort 'Failed to mount image'
  fi

  if $boot_mode; then
    migrate_cfg $blex_live/blex.cfg
  else
    migrate_cfg $blex_dir/blex.cfg
  fi

  print 'Preparing install folders'
  rm -r $blex_dir
  mkdir -p $sys_dir $bin_dir $doc_dir $blex_dir/log

  print 'Copying required blex files'
  cp -r $zip_sys/.                      $sys_dir/
  cp    $boot_exec $cfg_file $prop_file $blex_dir/
  cp    $bb_exec                        $bin_dir/
  cp    $doc_file                       $doc_dir/HELP
  cp    $gpl_file                       $doc_dir/

  if test ! -d $system/xbin; then
    mv $sys_dir/xbin $sys_dir/bin
  fi
  touch $blex_dir/auto_mount

  print 'Setting permissions'
  set_perm_recursive $blex_dir        0 0    0755 0644
  set_perm_recursive $sys_dir/*       0 2000 0755 0755
  set_perm           $bin_dir/busybox 0 2000 0755

  if $boot_mode; then
    mkdir $blex_live
    touch $blex_live/update
    cp -f $prop_file $blex_live/
  fi
else
  blex_dir=$de_data/blex
  doc_dir=$blex_dir/docs
  bin_dir=$blex_dir/bin
  log_dir=$blex_dir/log
  init_dir=$system/etc/init.d
  main_exec=$system/xbin/blex
  init_exec=$init_dir/99blexd

  if test ! -d $init_dir; then
    abort 'Init.d support is not detected'
  fi

  migrate_cfg $blex_dir/blex.cfg

  print 'Preparing install folders'
  rm -r $blex_dir
  mkdir -p $bin_dir $doc_dir $log_dir

  print 'Copying required blex files'
  cp -rf $zip_sys/. $system/
  cp     $boot_exec $init_exec
  cp     $bb_exec   $bin_dir/
  cp     $cfg_file  $blex_dir/
  cp     $prop_file $blex_dir/blex.prop
  cp     $doc_file  $doc_dir/HELP
  cp     $gpl_file  $doc_dir/

  touch $log_dir/boot.log $log_dir/main.log

  print 'Patching them for system mode'
  set_prop blex_dir $blex_dir $main_exec
  set_prop blex_dir $blex_dir $init_exec

  print 'Setting permissions'
  set_perm_recursive $blex_dir        0 0    0700 0600 u:object_r:adb_data_file:s0
  set_perm           $bin_dir/busybox 0 2000 0710      u:object_r:adb_data_file:s0
  set_perm           $main_exec       0 2000 0750
  set_perm           $init_exec       0 0    0700
fi

print 'Cleaning up'
cleanup
print 'Done'
exit 0
